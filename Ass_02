# Definition for singly-linked list node
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def insertAtEnd(head, x):
    new_node = Node(x)
    
    # If the list is empty, new node becomes the head
    if head is None:
        return new_node
    
    # Traverse to the end of the linked list
    current = head
    while current.next:
        current = current.next
    
    # Link the last node to the new node
    current.next = new_node
    
    return head

# Helper function to print the linked list
def printList(head):
    temp = head
    while temp:
        print(temp.data, end="->" if temp.next else "")
        temp = temp.next
    print()

# Example usage
if __name__ == "__main__":
    # Creating example linked list: 1->2->3->4->5
    head = Node(1)
    head.next = Node(2)
    head.next.next = Node(3)
    head.next.next.next = Node(4)
    head.next.next.next.next = Node(5)
    
    print("Original List:")
    printList(head)
    
    x = 6
    head = insertAtEnd(head, x)
    
    print("After inserting", x, "at end:")
    printList(head)
